!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";function n(t,e,o){this.title=t,this.description=e,this.dueDate=o,this.isDeleted=!1,this.todoList=[]}o.r(e),n.prototype.todoAlreadyInProject=function(t){return t?this.todoList.some(e=>e.title===t.title):"Error"},n.prototype.addTodo=function(t){if(this.todoAlreadyInProject(t))return"Error, task already in list";this.todoList.push(t)},n.prototype.removeTodo=function(t){if(!t)return"Error";this.todoList=this.todoList.filter(e=>e.title!==t)},n.prototype.deleteProject=function(){return this.isDeleted=!0,"Project marked for deletion"},n.prototype.deleteAllTasks=function(){return this.todoList=[],"All tasks deleted"};var i=n;const r=t=>{document.getElementById("content").innerHTML="",t.projectList.length>0&&t.projectList.forEach(e=>{d(t,e)})},d=(t,e)=>{if(!e)return"error, no project";const o=document.getElementById("content"),n=document.createElement("div");n.classList="project";const i=document.createElement("h3");i.textContent=e.title,i.classList="projectTitle",i.onclick=()=>{d.classList.contains("projectBodyHidden")?d.classList="projectBody":d.classList+=" projectBodyHidden"};const d=document.createElement("div");d.classList="projectBody";const a=document.createElement("p");a.textContent=e.description;const c=document.createElement("ul");if(console.log("render loglist function"),e.todoList&&e.todoList.length>0)for(let o=0;o<e.todoList.length;o++)c.appendChild(s(t,e,e.todoList[o]));const l=document.createElement("button"),u=document.createElement("button"),p=document.createElement("button");return l.textContent="Add Task",u.textContent="Edit",p.textContent="Delete",l.id=u.id=p.id=e.title,l.classList="btn btn-primary addTaskBtn",u.classList="btn btn-info editProjectBtn",p.classList="btn btn-danger deleteProjectBtn",l.addEventListener("click",()=>{console.log(i.textContent)}),p.addEventListener("click",e=>{console.log(e.target.id),t.projectList=t.projectList.filter(t=>t.title!==e.target.id),r(t),t.saveToLocalStorage()}),d.appendChild(a),d.appendChild(l),d.appendChild(u),d.appendChild(p),d.appendChild(c),n.appendChild(i),n.appendChild(d),o.appendChild(n),o},s=(t,e,o)=>{let n=document.createElement("li"),i=document.createElement("h4");i.textContent=o.title,i.classList="task",i.onclick=()=>{d.classList.contains("taskBodyHidden")?d.classList="taskBody":d.classList+=" taskBodyHidden"};let d=document.createElement("div");d.classList="taskBody taskBodyHidden";let s=document.createElement("p");s.textContent=o.dueDate;let a=document.createElement("p");a.textContent=o.priority;let c=document.createElement("p");c.textContent=o.description;const l=document.createElement("button"),u=document.createElement("button"),p=document.createElement("button");return l.textContent="Complete",u.textContent="Edit",p.textContent="Delete",l.id=u.id=p.id=o.title,l.addEventListener("click",()=>{o.isDone||(o.isDone=!0,n.classList+="crossed",t.saveToLocalStorage())}),u.addEventListener("click",e=>{if(!o.isDone){!function(t,e){t.innerHTML="",t.innerHTML+=`\n        <form action="">\n            <label>Due date</label>\n            <input type="date" id="editTaskDueDate" placeholder=${e.dueDate}>\n\n            <label>Priority</label>\n            <select name="priority" id="editTaskPriority">\n                <option value="High">High</option>\n                <option value="Medium">Medium</option>\n                <option value="Low">Low</option>\n            </select>\n\n            <label>Project description</label>\n            <textarea name="" id="editTaskDescription" cols="30" rows="10" placeholder=${e.description}></textarea>\n\n            <button id="submitEditTask">Edit task</button>\n            <button id="cancelEditTask">Cancel</button>\n        </form>`}(d,o);let e=document.getElementById("editTaskDescription");console.log(e.placeholder),document.getElementById("submitEditTask").addEventListener("click",e=>{e.preventDefault(),o.dueDate=document.getElementById("editTaskDueDate").value,o.priority=document.getElementById("editTaskPriority").value,o.description=document.getElementById("editTaskDescription").value,t.saveToLocalStorage(),r(t)}),document.getElementById("cancelEditTask").addEventListener("click",()=>{r(t)})}}),p.addEventListener("click",()=>{e.removeTodo(o.title),t.saveToLocalStorage(),r(t)}),l.classList="btn btn-primary completeTaskBtn",u.classList="btn btn-info editTaskBtn",p.classList="btn btn-danger deleteTaskBtn",d.appendChild(s),d.appendChild(a),d.appendChild(c),d.appendChild(l),d.appendChild(u),d.appendChild(p),n.appendChild(i),n.appendChild(d),o.isDone&&(n.classList+=" crossed"),n};var a=r;function c(){this.projectList=[]}c.prototype.checkProjectAlreadyInList=function(t){return this.projectList.some(e=>e.title===t)},c.prototype.addProject=function(t,e,o){if(this.checkProjectAlreadyInList(t))return"Error, task already in list";this.projectList.push(new i(t,e,o)),a(this)},c.prototype.saveToLocalStorage=function(){if(null!==localStorage.getItem("projects")){let t=JSON.parse(localStorage.getItem("projects"));return t=this.projectList,localStorage.setItem("projects",JSON.stringify(t)),"Updated existing database"}let t=this.projectList;return localStorage.setItem("projects",JSON.stringify(t)),"Created new database"},c.prototype.loadFromLocalStorage=function(){if(null!==localStorage.getItem("projects")){return JSON.parse(localStorage.getItem("projects")).forEach(t=>{let e=new i(t.title,t.description,t.dueDate);t.todoList.length>0&&t.todoList.forEach(t=>e.addTodo(t)),this.projectList.push(e)}),"Loaded successfully"}return"Failed to load, no database found."};var l=c;const u=document.getElementById("newProjectTitle"),p=document.getElementById("newProjectDueDate"),m=document.getElementById("newProjectDescription");document.querySelector("form");document.getElementById("submitProject").addEventListener("click",t=>{t.preventDefault(),y.addProject(u.value,m.value,p.value)});let h=new i("test project","test purposes","when it's done");h.addTodo({title:"Turn",description:"Burn the garden",dueDate:"tomorrow",priority:"high",isDone:!1}),h.addTodo({title:"Burn",description:"Burn the garden",dueDate:"tomorrow",priority:"high",isDone:!1}),h.addTodo({title:"Churn",description:"Burn the garden",dueDate:"tomorrow",priority:"high",isDone:!1}),h.addTodo({title:"Jason Burn",description:"Burn the garden",dueDate:"tomorrow",priority:"high",isDone:!1});const y=new l;y.loadFromLocalStorage(),y.saveToLocalStorage(),a(y);const L=document.createElement("button");L.textContent="Refresh",L.addEventListener("click",()=>console.log(y.projectList)),document.querySelector("body").appendChild(L)}]);